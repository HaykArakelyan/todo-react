{"ast":null,"code":"var _jsxFileName = \"/home/hayk-arakelyan/Desktop/myractproject/src/components/TodoList.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoList = () => {\n  _s();\n\n  const [todos, setTodo] = useState();\n  const todoNameRef = useRef();\n\n  const addNewTodo = () => {\n    const newText = todoNameRef.current.value;\n    const newID = new Date().getTime();\n\n    if (newText === '') {\n      return;\n    }\n\n    setTodo(lastTodo => {\n      return [...lastTodo, {\n        id: newID,\n        text: newText,\n        done: false\n      }];\n    });\n    todoNameRef.current.value = null;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: 'text',\n      ref: todoNameRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"btn\",\n      onClick: addNewTodo,\n      type: 'button',\n      value: 'Add new TODO'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoList, \"A0GhGqyeFkfOB+Q0purO6Aj7dCw=\");\n\n_c = TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/home/hayk-arakelyan/Desktop/myractproject/src/components/TodoList.js"],"names":["useRef","useState","TodoList","todos","setTodo","todoNameRef","addNewTodo","newText","current","value","newID","Date","getTime","lastTodo","id","text","done"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,KAAD,EAAQC,OAAR,IAAmBH,QAAQ,EAAjC;AAEA,QAAMI,WAAW,GAAGL,MAAM,EAA1B;;AAEA,QAAMM,UAAU,GAAG,MAAM;AACrB,UAAMC,OAAO,GAAGF,WAAW,CAACG,OAAZ,CAAoBC,KAApC;AACA,UAAMC,KAAK,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAd;;AACA,QAAIL,OAAO,KAAK,EAAhB,EAAoB;AAChB;AACH;;AACDH,IAAAA,OAAO,CAACS,QAAQ,IAAI;AAChB,aAAO,CAAC,GAAGA,QAAJ,EAAc;AAAEC,QAAAA,EAAE,EAAEJ,KAAN;AAAaK,QAAAA,IAAI,EAAER,OAAnB;AAA4BS,QAAAA,IAAI,EAAE;AAAlC,OAAd,CAAP;AACH,KAFM,CAAP;AAGAX,IAAAA,WAAW,CAACG,OAAZ,CAAoBC,KAApB,GAA4B,IAA5B;AACH,GAVD;;AAaA,sBACI;AAAA,4BACI;AAAO,MAAA,IAAI,EAAE,MAAb;AAAqB,MAAA,GAAG,EAAEJ;AAA1B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,SAAS,EAAC,KAAjB;AAAuB,MAAA,OAAO,EAAEC,UAAhC;AAA4C,MAAA,IAAI,EAAE,QAAlD;AAA4D,MAAA,KAAK,EAAE;AAAnE;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAxBM;;GAAMJ,Q;;KAAAA,Q","sourcesContent":["import { useRef, useState } from \"react\";\n\nexport const TodoList = () => {\n    const [todos, setTodo] = useState();\n\n    const todoNameRef = useRef();\n\n    const addNewTodo = () => {\n        const newText = todoNameRef.current.value;\n        const newID = new Date().getTime();\n        if (newText === '') {\n            return;\n        }\n        setTodo(lastTodo => {\n            return [...lastTodo, { id: newID, text: newText, done: false }]\n        })\n        todoNameRef.current.value = null;\n    }\n\n\n    return (\n        <div>\n            <input type={'text'} ref={todoNameRef}></input>\n            <input className=\"btn\" onClick={addNewTodo} type={'button'} value={'Add new TODO'}></input>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}