{"ast":null,"code":"var _jsxFileName = \"/home/hayk-arakelyan/Desktop/myractproject/src/components/Header.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Header = () => {\n  _s();\n\n  const [todoList, setTodo] = useState([]);\n\n  function getNewTitle(e) {\n    const newTitle = e.target.value;\n\n    if (newTitle === '') {\n      return;\n    }\n\n    console.log(newTitle);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: getNewTitle,\n      type: 'text'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: 'Add new TODO'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Header, \"gfmdctg2A4khDhFcsz47GJpVwqU=\");\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/home/hayk-arakelyan/Desktop/myractproject/src/components/Header.js"],"names":["useState","Header","todoList","setTodo","getNewTitle","e","newTitle","target","value","console","log"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,OAAO,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAExB,QAAM,CAACC,QAAD,EAAWC,OAAX,IAAsBH,QAAQ,CAAC,EAAD,CAApC;;AAEA,WAASI,WAAT,CAAqBC,CAArB,EAAuB;AACnB,UAAMC,QAAQ,GAAGD,CAAC,CAACE,MAAF,CAASC,KAA1B;;AAEA,QAAIF,QAAQ,KAAK,EAAjB,EAAqB;AACjB;AACH;;AACDG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACH;;AACD,sBACI;AAAA,4BACI;AAAO,MAAA,QAAQ,EAAIF,WAAnB;AAAgC,MAAA,IAAI,EAAE;AAAtC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,IAAI,EAAE,QAAb;AAAsB,MAAA,KAAK,EAAE;AAA7B;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAlBM;;GAAMH,M;;KAAAA,M","sourcesContent":["import { useState } from \"react\";\n\nexport const Header = () => {\n\n    const [todoList, setTodo] = useState([]);\n\n    function getNewTitle(e){\n        const newTitle = e.target.value;\n\n        if (newTitle === '') {\n            return;\n        }\n        console.log(newTitle)\n    }\n    return (\n        <div>\n            <input onChange = {getNewTitle} type={'text'}></input>\n            <input type =\"submit\" value={'Add new TODO'}></input>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}