{"ast":null,"code":"var _jsxFileName = \"/home/hayk-arakelyan/Desktop/myractproject/src/components/Header.js\",\n    _s = $RefreshSig$();\n\nimport { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Header = () => {\n  _s();\n\n  const newTextRef = useRef();\n\n  function handleRef(e) {\n    const newTitle = newTextRef.current.value;\n\n    if (newTitle === '') {\n      return;\n    }\n\n    console.log(newTitle);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: newTextRef,\n      type: 'text'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRef,\n      children: \"Add new TODO\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Header, \"CIFyypV9ENOlcIg0IdyKKv7Bo+s=\");\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/home/hayk-arakelyan/Desktop/myractproject/src/components/Header.js"],"names":["useRef","Header","newTextRef","handleRef","e","newTitle","current","value","console","log"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,OAAvB;;AAEA,OAAO,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACxB,QAAMC,UAAU,GAAGF,MAAM,EAAzB;;AAEA,WAASG,SAAT,CAAmBC,CAAnB,EAAqB;AACjB,UAAMC,QAAQ,GAAGH,UAAU,CAACI,OAAX,CAAmBC,KAApC;;AACA,QAAIF,QAAQ,KAAK,EAAjB,EAAqB;AACjB;AACH;;AACDG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACH;;AACD,sBACI;AAAA,4BACI;AAAO,MAAA,GAAG,EAAEH,UAAZ;AAAwB,MAAA,IAAI,EAAE;AAA9B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAEC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAhBM;;GAAMF,M;;KAAAA,M","sourcesContent":["import { useRef } from \"react\"\n\nexport const Header = () => {\n    const newTextRef = useRef();\n\n    function handleRef(e){\n        const newTitle = newTextRef.current.value;\n        if (newTitle === '') {\n            return;\n        }\n        console.log(newTitle)\n    }\n    return (\n        <div>\n            <input ref={newTextRef} type={'text'}></input>\n            <button onClick={handleRef}>Add new TODO</button>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}